{"version":3,"sources":["Images/sidenav.png","Pages/Login.js","Pages/Dashboard.js","Pages/AddNewMerchant.js","Pages/forgotPassword.js","Pages/enterOtp.js","Pages/changePassword.js","App.js","serviceWorker.js","store/reducers/AuthReducer.js","store/reducers/AllReducers.js","store/index.js","index.js","Images/logo.jpg"],"names":["module","exports","Login","props","handleForm","e","preventDefault","console","log","data","email","state","password","axios","post","then","result","localStorage","setItem","token","JSON","stringify","user","setLogin","NotificationManager","success","msg","history","push","catch","err","response","status","error","setState","errors","handleInput","target","redirect","this","Container","maxwidth","src","logo","height","alt","Box","textAlign","ml","mt","onSubmit","TextField","className","label","id","defaultValue","variant","size","name","onChange","type","block","FormControlLabel","control","Checkbox","color","to","Button","onClick","Component","connect","dispatch","payload","useStyles","makeStyles","theme","root","display","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","width","enteringScreen","menuButton","hide","flexShrink","whiteSpace","drawerOpen","drawerClose","overflowX","spacing","breakpoints","up","toolbar","alignItems","justifyContent","padding","mixins","content","flexGrow","MiniDrawer","classes","useTheme","React","useState","open","setOpen","CssBaseline","AppBar","position","clsx","Toolbar","IconButton","aria-label","edge","Typography","noWrap","Drawer","paper","sidenav","List","ListItem","button","ListItemIcon","ListItemText","secondary","AddNewMerchant","forgotPassword","handleChange","event","value","handleSubmit","res","enterOtp","Password","login","changePassword","App","exact","path","component","Dashboard","render","Boolean","window","location","hostname","match","AuthReducer","actions","loggedIn","AllReducers","combineReducers","auth","initialStates","getItem","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","jwt","verify","decoded","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.2535ca1e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/sidenav.bed343c9.png\";","import React, { Component } from \"react\";\r\nimport { Container, Box, TextField } from \"@material-ui/core\";\r\nimport logo from \"../Images/logo.jpg\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { connect } from \"react-redux\";\r\nimport axios from 'axios';\r\nimport { NotificationManager } from \"react-notifications\";\r\nimport { Link } from 'react-router-dom';\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: \"\", password: \"\", redirect: false };\r\n  }\r\n  handleForm = e => {\r\n    e.preventDefault();\r\n    console.log(\"test1\");\r\n    /*\r\n    if (this.state.email === '' || this.state.password === '') {\r\n      NotificationManager.warning(\"Email And Password Required\");\r\n\r\n      return false;\r\n\r\n    } */\r\n    console.log(\"its working\");\r\n    const data = { email: this.state.email, password: this.state.password };\r\n    axios\r\n      .post(\" https://sipcityapi.mobileprogramming.net/admin-login\", data)\r\n      .then(result => {\r\n        localStorage.setItem(\"token\", result.data.token);\r\n        localStorage.setItem(\"user\", JSON.stringify(result.data.user));\r\n        this.props.setLogin(JSON.stringify(result.data.user));\r\n        NotificationManager.success(result.data.msg);\r\n        this.props.history.push(\"/Dashboard\");\r\n      })\r\n      .catch(err => {\r\n        if (err.response && err.response.status === 404)\r\n          NotificationManager.error(err.response.data.msg);\r\n        else\r\n          NotificationManager.error(\"Something Went Wrong\");\r\n        this.setState({ errors: err.response })\r\n      });\r\n  };\r\n  handleInput = e => {\r\n    e.preventDefault();\r\n    const email = e.target.email;\r\n    const password = e.target.password;\r\n    this.setState({ [email]: password });\r\n    console.log(email, password);\r\n  };\r\n\r\n  render() {\r\n    console.log(\"test\", this.state);\r\n    return (\r\n      <Container maxwidth=\"lg\">\r\n        <img src={logo} height=\"650px\" alt=\"login\" />\r\n        <Box textAlign=\"center\" ml={61} mt={-75}>\r\n          <h1>Login</h1>\r\n          <p>Please Enter your details</p>\r\n          <br />\r\n\r\n          <form onSubmit={this.handleForm}>\r\n            <TextField\r\n              className=\"text\"\r\n              label=\"Enter Email ID\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"email\"\r\n              onChange={this.handleInput}\r\n\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              className=\"text\"\r\n              label=\"Password\"\r\n              type=\"password\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              name=\"password\"\r\n              onChange={this.handleInput}\r\n              block\r\n            />\r\n            <br />\r\n          </form>\r\n          <br />\r\n          <div className=\"forgot\">\r\n            <FormControlLabel\r\n              className=\"check\"\r\n              control={<Checkbox name=\"checkedC\" />}\r\n              label=\"Remember me\"\r\n              color=\"primary\"\r\n            />\r\n            <h5><Link to={'/forgotPassword'}>Forgot password?</Link></h5>\r\n          </div>\r\n          <div className=\"btn\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleForm}>\r\n              Login\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setLogin: user => dispatch({ type: \"SET_LOGIN\", payload: user })\r\n  };\r\n};\r\nexport default connect(\r\n  null,\r\n  mapDispatchToProps\r\n)(Login);\r\n","import React from \"react\";\r\nimport clsx from \"clsx\";\r\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport ChevronRightIcon from \"@material-ui/icons/ChevronRight\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\r\nimport MailIcon from \"@material-ui/icons/Mail\";\r\nimport sidenav from \"../Images/sidenav.png\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: -115,\r\n  },\r\n  hide: {\r\n    display: \"none\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n    whiteSpace: \"nowrap\",\r\n  },\r\n  drawerOpen: {\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerClose: {\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    overflowX: \"hidden\",\r\n    width: theme.spacing(7) + 1,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing(9) + 1,\r\n    },\r\n  },\r\n  toolbar: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: theme.spacing(0, 1),\r\n    // necessary for content to be below app bar\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nexport default function MiniDrawer() {\r\n  const classes = useStyles();\r\n  const theme = useTheme();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [close, setClose] = React.useState(true);\r\n\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleDrawerClose = () => {\r\n    setClose(false);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <AppBar\r\n        position=\"fixed\"\r\n        className={clsx(classes.appBar, {\r\n          [classes.appBarShift]: open,\r\n        })}\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            color=\"inherit\"\r\n            aria-label=\"open drawer\"\r\n            onClick={handleDrawerOpen}\r\n            edge=\"start\"\r\n            className={clsx(classes.menuButton, {\r\n              [classes.open]: open,\r\n            })}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" noWrap>\r\n            Sip City\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        className={clsx(classes.drawer, {\r\n          [classes.drawerOpen]: open,\r\n          [classes.drawerClose]: !open,\r\n        })}\r\n        classes={{\r\n          paper: clsx({\r\n            [classes.drawerOpen]: open,\r\n            [classes.drawerClose]: !open,\r\n          }),\r\n        }}\r\n      >\r\n        <div className={classes.toolbar}></div>\r\n\r\n        <img src={sidenav} className=\"sideNav\" />\r\n\r\n        <List>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <AddIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Add Merchants\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <DashboardIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Dashboard\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <PersonIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Merchants\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <GroupIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Members\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <LockIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Reset password\" />\r\n          </ListItem>\r\n          <ListItem button>\r\n            <ListItemIcon>\r\n              <ExitToAppIcon />\r\n            </ListItemIcon>\r\n            <ListItemText secondary=\"Logout\" />\r\n          </ListItem>\r\n        </List>\r\n      </Drawer>\r\n      <main className={classes.content}>\r\n        <div className={classes.toolbar} />\r\n        <h2>Dashboard page</h2>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nclass AddNewMerchant extends Component {\r\n  render() {\r\n    return <div>Add New Merchant page</div>;\r\n  }\r\n}\r\nexport default AddNewMerchant;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, TextField } from \"@material-ui/core\";\r\nimport logo from \"../Images/logo.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport axios from \"axios\";\r\nimport { NotificationContainer, NotificationManager } from 'react-notifications';\r\nclass forgotPassword extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n\r\n    };\r\n\r\n  }\r\n\r\n\r\n  handleChange = event => {\r\n    this.setState({ name: event.target.value });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n\r\n    const user = {\r\n      name: this.state.name\r\n    };\r\n\r\n    axios.post(` https://sipcityapi.mobileprogramming.net/admin/forgot`, { user })\r\n      .then(res => {\r\n        console.log(res);\r\n        console.log(res.data);\r\n        this.props.history.push(\"/enterOtp\");\r\n        console.log(\"its working\");\r\n      })\r\n  }\r\n\r\n  render() {\r\n    console.log(\"test\");\r\n    return (\r\n      <Container maxwidth=\"lg\">\r\n        <img src={logo} height=\"650px\" />\r\n        <Box textAlign=\"center\" ml={61} mt={-75}>\r\n          <h1 className=\"forgotHeading\">Forgot your Password?</h1>\r\n          <p className=\"forgotPara\">\r\n            Please Enter your phone number or email associated with your account\r\n            we will send you OTP to reset your password\r\n          </p>\r\n          <br />\r\n\r\n          <form onSubmit={this.handleSubmit}>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              className=\"text\"\r\n              label=\"please enter your Email or Phone no\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onChange={this.handleChange}\r\n              block\r\n            />\r\n            <br />\r\n          </form>\r\n          <br />\r\n          <br />\r\n\r\n          <div className=\"btn\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.handleSubmit}>\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default forgotPassword;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, TextField } from \"@material-ui/core\";\r\nimport logo from \"../Images/logo.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass enterOtp extends Component {\r\n  render() {\r\n    return (\r\n      <Container maxwidth=\"lg\">\r\n        <img src={logo} height=\"650px\" />\r\n        <Box textAlign=\"center\" ml={61} mt={-75}>\r\n          <h1 className=\"otpHeading\">Enter OTP!</h1>\r\n          <p className=\"otpPara\">\r\n            Enter the 6 digit OTP we just sent you on your phone number\r\n          </p>\r\n          <br />\r\n\r\n          <form>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              className=\"text\"\r\n              label=\"please enter your OTP\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              type=\"password\"\r\n              onChange={this.Password}\r\n              block\r\n            />\r\n            <br />\r\n          </form>\r\n          <br />\r\n          <br />\r\n          <p className=\"resendPara\">\r\n            if you dont receive a code!<span className=\"resend\">Resend</span>\r\n          </p>\r\n          <br />\r\n          <div className=\"btn\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login}>\r\n              Verify\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default enterOtp;\r\n","import React, { Component } from \"react\";\r\nimport { Container, Box, TextField } from \"@material-ui/core\";\r\nimport logo from \"../Images/logo.jpg\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nclass changePassword extends Component {\r\n  render() {\r\n    return (\r\n      <Container maxwidth=\"lg\">\r\n        <img src={logo} height=\"650px\" />\r\n        <Box textAlign=\"center\" ml={61} mt={-75}>\r\n          <h1 className=\"changeHeading\">Change Password!</h1>\r\n          <p className=\"changePara\">\r\n            Welcome! now you can change your password\r\n          </p>\r\n          <br />\r\n\r\n          <form>\r\n            <br />\r\n            <br />\r\n            <br />\r\n\r\n            <TextField\r\n              className=\"text\"\r\n              label=\"Enter new password\"\r\n              type=\"password\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onChange={this.Password}\r\n              block\r\n            />\r\n            <br />\r\n            <br />\r\n            <br />\r\n            <TextField\r\n              className=\"text\"\r\n              type=\"password\"\r\n              label=\"confirm new password\"\r\n              id=\"outlined-size-small\"\r\n              defaultValue=\"\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onChange={this.Password}\r\n              block\r\n            />\r\n          </form>\r\n          <br />\r\n          <br />\r\n\r\n          <div className=\"btn\">\r\n            <Button variant=\"contained\" color=\"primary\" onClick={this.login}>\r\n              Done\r\n            </Button>\r\n          </div>\r\n        </Box>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default changePassword;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport Login from \"./Pages/Login\";\r\nimport Dashboard from \"./Pages/Dashboard\";\r\nimport AddNewMerchant from \"./Pages/AddNewMerchant\";\r\nimport forgotPassword from \"./Pages/forgotPassword\";\r\nimport enterOtp from \"./Pages/enterOtp\";\r\nimport changePassword from \"./Pages/changePassword\";\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/login\" />\r\n        </Route>\r\n        <Route exact path=\"/login\" component={Login} />\r\n        <Route path=\"/Dashboard\" component={Dashboard} />\r\n        <Route path=\"/AddNewMerchant\" component={AddNewMerchant} />\r\n        <Route path=\"/forgotPassword\" component={forgotPassword} />\r\n        <Route path=\"/enterOtp\" component={enterOtp} />\r\n        <Route path=\"/changePassword\" component={changePassword} />\r\n        <Route path=\"*\" render={() => \"404 error page not found\"} />\r\n      </Switch>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const AuthReducer = (state = {}, actions) => {\r\n    switch (actions.type) {\r\n        case \"SET_LOGIN\":\r\n            return { ...state, loggedIn: true, user: actions.payload };\r\n        case \"SET_LOGOUT\":\r\n            return { ...state, loggedIn: false, user: {} };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AuthReducer;","import { combineReducers } from \"redux\";\r\nimport AuthReducer from \"./AuthReducer\";\r\n\r\nconst AllReducers = combineReducers({ auth: AuthReducer });\r\n\r\nexport default AllReducers;","import { createStore } from \"redux\";\r\nimport AllReducers from \"./reducers/AllReducers\";\r\nlet loginStatus = () => {\r\n    // return localStorage.getItem('token')?true:false;\r\n    if (localStorage.getItem('token') && (typeof localStorage.getItem('token') !== 'undefined')) {\r\n        return true;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nlet loginDetail = () => {\r\n    return localStorage.getItem('user') ? localStorage.getItem('user') : null;\r\n}\r\nconst initialStates = {\r\n    auth: {\r\n        loggedIn: loginStatus(),\r\n        user: loginDetail()\r\n    }\r\n};\r\nconst store = createStore(\r\n    AllReducers,\r\n    initialStates,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\nexport default store;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport store from \"./store/index\";\r\nimport { Provider } from \"react-redux\";\r\nimport jwt from \"jsonwebtoken\";\r\nconst jwt_secret =\r\n  \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyRGF0YSI6eyJpZCI6MSwibmFtZSI6IkFkbWluaXN0cmF0b3IiLCJlbWFpbCI6Im11ZGl0Lmt1bWFyQG1vYmlsZXByb2dyYW1taW5nLmNvbSJ9LCJpYXQiOjE1OTY1NzUyNDAsImV4cCI6MzE5MzE1NDA4MH0.7F2vbRcrCQio-FT2R6wfY-I7hHPiXffOpc3dbBWuiJU\";\r\nlet token = localStorage.getItem('token');\r\nif (token) {\r\n  jwt.verify(token, jwt_secret, (err, decoded) => {\r\n    // if (err) {\r\n    //   localStorage.removeItem(\"token\");\r\n    //   token = null;\r\n    // } else {\r\n    //   if (decoded.iss !== \" https://sipcityapi.mobileprogramming.net/admin-login\") {\r\n    //     localStorage.removeItem(\"token\");\r\n    //     token = null;\r\n    //   }\r\n    // }\r\n  });\r\n}\r\n\r\nconst render = () => {\r\n  ReactDOM.render(\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n  );\r\n};\r\nif (token) {\r\n  // axios.defaults.headers.common[\"Authorization\"] = `Bearer ${token}`;\r\n  // axios.post(\" https://sipcityapi.mobileprogramming.net/admin-login\").then(res => {\r\n  //   store.dispatch({ type: \"SET_LOGIN\", payload: res.data });\r\n  //   render();\r\n  // });\r\n\r\n  // fetch(' https://sipcityapi.mobileprogramming.net/admin-login', {\r\n  //     method: 'POST',\r\n  //     headers: {\r\n  //       'Content-Type': 'application/json',\r\n  //       \"Authorization\":`${token}`\r\n  //     }\r\n  //   })\r\n  //     .then(res => res.json())\r\n  //     .then(\r\n  //       (result) => {\r\n  //         localStorage.setItem(\"token\", result.token);\r\n  //         localStorage.setItem(\"user\", JSON.stringify(result.user));\r\n  //         this.props.setLogin(result.user);\r\n  //         this.props.history.push(\"/Dashboard\");\r\n  //       },\r\n  //       (error) => {\r\n  //         console.log(error);\r\n  //       }\r\n  //     )\r\n  //     .catch(err => {\r\n  //       this.setState({ errors: err });\r\n  //     });\r\n\r\n  render();\r\n\r\n} else {\r\n  render();\r\n}\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.aa9e20fb.jpg\";"],"sourceRoot":""}